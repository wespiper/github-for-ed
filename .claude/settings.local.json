{
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(npx:*)",
      "Bash(npm init:*)",
      "Bash(mkdir:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(gh repo create:*)",
      "Bash(cp:*)",
      "Bash(timeout:*)",
      "Bash(npm run build:*)",
      "Bash(find:*)",
      "WebFetch(domain:gist.github.com)",
      "WebFetch(domain:github.com)",
      "Bash(rm:*)",
      "Bash(git push:*)",
      "Bash(npm uninstall:*)",
      "Bash(node test-backend.js)",
      "Bash(brew services:*)",
      "Bash(brew tap:*)",
      "Bash(brew install:*)",
      "Bash(xcode-select:*)",
      "Bash(brew list:*)",
      "Bash(curl:*)",
      "Bash(tar:*)",
      "Bash(./mongodb-macos-x86_64-7.0.0/bin/mongod:*)",
      "Bash(npm run dev:*)",
      "Bash(chmod:*)",
      "Bash(npm start)",
      "WebFetch(domain:api.github.com)",
      "Bash(grep:*)",
      "Bash(npm run lint)",
      "Bash(gh issue view:*)",
      "Bash(gh api:*)",
      "Bash(rg:*)",
      "Bash(sed:*)",
      "Bash(gh issue list:*)",
      "Bash(cat:*)",
      "Bash(npm test)",
      "mcp__ide__getDiagnostics",
      "Bash(npm test:*)",
      "Bash(ls:*)",
      "Bash(mv:*)",
      "Bash(node:*)",
      "Bash(npm run seed:*)",
      "Bash(/opt/homebrew/opt/postgresql@15/bin/createdb scribe_tree)",
      "Bash(/opt/homebrew/opt/postgresql@15/bin/psql -d scribe_tree -f /Users/wnp/Desktop/github-for-ed/backend/setup-db.sql)",
      "Bash(/opt/homebrew/opt/postgresql@15/bin/psql -U scribe_tree_user -d scribe_tree -c \"\\dt\")",
      "Bash(npm run migrate:*)",
      "Bash(/opt/homebrew/opt/postgresql@15/bin/psql:*)",
      "Bash(true)",
      "Bash(git remote set-url:*)",
      "Bash(git fetch:*)",
      "Bash(NODE_ENV=test npm test -- --testPathPattern=\"BoundaryIntelligence\" --verbose --maxWorkers=1)",
      "Bash(NODE_ENV=test npm test -- --testPathPattern=\"BoundaryIntelligence\" --verbose --maxWorkers=1 --testTimeout=30000)",
      "Bash(git filter-branch:*)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --msg-filter '\n  # Remove Claude Code attribution lines\n  sed -e \"/ðŸ¤– Generated with \\[Claude Code\\]/d\" \\\n      -e \"/Co-Authored-By: Claude <noreply@anthropic.com>/d\" \\\n      -e \"/^$/N;/^\\n$/d\"\n' -- HEAD~6..HEAD~1)",
      "Bash(git stash:*)",
      "mcp__ide__executeCode",
      "Bash(env)",
      "Bash(pkill:*)",
      "Bash(npm run:*)",
      "Bash(./test-endpoints.sh:*)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg \"''due''\" src/repositories/mock/MockAssignmentRepository.ts)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg -A 10 \"event.*created.*published\" src/repositories/interfaces/AssignmentRepository.ts)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg -A 5 -B 5 \"'due'\" src/repositories/prisma/PrismaAssignmentRepository.ts)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg -A 10 \"enum.*status\\|enum.*Status\" prisma/schema.prisma)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg \"AssignmentStatus\" prisma/schema.prisma)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg \"status.*String\" prisma/schema.prisma)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg -B 2 -A 2 'status.*String.*\"draft\"' prisma/schema.prisma)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg \"AIBoundaryService\\.\" src/routes/ src/scripts/)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg \"attachServices\\|export.*attachServices\" src/)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg \"attachServices\" src/)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg -n \"TS2345.*never\" --type ts)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg -A 30 \"findNeedingInterventionInsights\" src/repositories/prisma/PrismaAssignmentRepository.ts)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg -B 10 -A 30 \"submissions.*author.*id.*firstName.*lastName\" src/repositories/prisma/PrismaAssignmentRepository.ts)",
      "Bash(git rm:*)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg \"StrategicConversation\" --line-number)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg \"\\.completed\" --line-number)",
      "Bash(/Users/wnp/opt/anaconda3/bin/rg \"prepareAllDataExport\" --line-number)",
      "Bash(echo:*)",
      "Bash(gtimeout:*)",
      "Bash(npm info:*)",
      "WebFetch(domain:www.reddit.com)",
      "Bash(MCP_EDUCATOR_ALERTS_PATH=\"/Users/wnp/Desktop/scribe-tree/mcp-servers/educator-alerts/dist/index.js\" node test-educator-alerts-integration.js)",
      "Bash(MCP_EDUCATOR_ALERTS_PATH=\"/Users/wnp/Desktop/scribe-tree/mcp-servers/educator-alerts/dist/index.js\" node debug-path.js)",
      "Bash(MCP_EDUCATIONAL_AI_VALIDATOR_PATH=\"/Users/wnp/Desktop/scribe-tree/mcp-servers/educational-ai-validator/dist/index.js\" node test-educational-ai-validator-integration.js)",
      "Bash(touch:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false,
  "mcpServers": {
    "scribe-tree-docs": {
      "command": "node",
      "args": [
        "/Users/wnp/Desktop/scribe-tree/mcp-servers/scribe-tree-docs/dist/server.js"
      ],
      "env": {
        "PROJECT_ROOT": "/Users/wnp/Desktop/scribe-tree"
      }
    }
  }
}